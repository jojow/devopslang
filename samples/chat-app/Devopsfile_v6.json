{
    "name": "chatapp",
    "version": "...",
    "author": "...",
    "description": "...",

    "operations": {
        "build": {
            "artifacts": {
                "get-app": {
                    "runner": "command-runner",
                    "comment": "git must be installed",
                    "config": {
                        "command": "git clone https://git-server/chatapp.git"
                    }
                },
                "install-deps": {
                    "runner": "command-runner",
                    "config": {
                        "command": "npm install",
                        "cwd": "./chatapp"
                    }
                },
                "run-tests": {
                    "runner": "operation-runner",
                    "config": {
                        "operation": "test"
                    }
                }
            },
            "dependencies": [
                [ "install-deps", "get-app" ],
                [ "run-tests", "install-deps" ]
            ]
        },
        "test": {
            "artifacts": {
                "unit-tests": {
                    "runner": "command-runner",
                    "config": {
                        "command": "./node_modules/mocha/bin/mocha"
                    }
                }
            }
        },
        "start": {
            "artifacts": {
                "chatapp": {
                    "runner": "command-runner",
                    "config": {
                        "command": "export PORT=3000 && node app.js",
                        "cwd": "./chatapp"
                    }
                },
                "mongodb": {
                    "runner": "command-runner",
                    "config": {
                        "command": "mongod --syslog --maxConns 10"
                    }
                }
            },
            "dependencies": [
                [ "chat-app", "mongodb" ]
            ]
        },
        "deploy": {
            "artifacts": {
                "deploy-git": {
                    "runner": "chef-solo-runner",
                    "config": {
                        "files": { "git.tar.gz": "http://s3.amazonaws.com/community-files.opscode.com/cookbook_versions/tarballs/6224/original/git20140318-2456-184qsad.?1395184516" },
                        "runlist": [ "recipe[git::default]" ]
                    }
                },
                "deploy-nodejs": {
                    "runner": "chef-solo-runner",
                    "config": {
                        "files": { "nodejs.tar.gz": "http://s3.amazonaws.com/community-files.opscode.com/cookbook_versions/tarballs/4335/original/nodejs.tar.gz?1376517323" },
                        "runlist": [ "recipe[nodejs::default]" ],
                        "nodejs": {
                            "version": "0.10.26",
                            "check_sha": false
                        }
                    }
                },
                "deploy-mongodb": {
                    "runner": "chef-solo-runner",
                    "config": {
                        "files": { "mongodb.tar.gz": "http://s3.amazonaws.com/community-files.opscode.com/cookbook_versions/tarballs/6346/original/mongodb.tar.gz?1396423886" },
                        "runlist": [ "recipe[mongodb::default]" ]
                    },
                    "mergeconfig": false
                },
                "build-app": {
                    "runner": "operation-runner",
                    "config": {
                        "operation": "build"
                    }
                },
                "start-app": {
                    "runner": "operation-runner",
                    "config": {
                        "operation": "start"
                    }
                }
            },
            "sequence": [
                "deploy-git",
                "deploy-nodejs",
                "deploy-mongodb",
                "build-app",
                "start-app"
            ],
            "postoptest": {
                "runner": "command-runner",
                "config": {
                    "command": "export RESCODE=$(curl -sL -w \"%{http_code}\\n\" \"http://localhost:3000\" -o /dev/null) && [[ \"$RESCODE\" == \"200\" ]] && true || false"
                }
            }
        }
    }
}