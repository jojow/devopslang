{
    "name": "chat-app",
    "version": "...",
    "author": "...",
    "description": "...",

    "globalconfig": {
        "chatapp": {
            "port": 3000,
            "https_only": true
        },
        "aws": {
            "access-key-id": "TBD",
            "secret-access-key": "TBD",
            "vm-props": {
                "app-vm": {
                    "size": "m1.small"
                },
                "db-vm": {
                    "size": "m1.large"
                }
            },
            "sec-groups": {
                "chat": {
                    "members": [ "app-vm", "db-vm" ]
                }
            }
        }
    },

    "hosts": {
        "app-vm": {},
        "db-vm": {}
    },

    "operations": {
        "deploy": {
            "config": {
                "nodejs": {
                    "version": "0.10.26"
                }
            },
            "artifacts": {
                "provision-app-vm": {
                    "runner": "js-sandbox-runner",
                    "config": {
                        "hostname": "app-vm",
                        "files": { "ec2-provision.js": "http://ops-artifact-store/aws-management/ec2-provision.js" },
                        "include": [ "ec2-provision.js" ]
                    },
                    "prerun": [
                        "// some sandboxed JavaScript code to transform and/or map config parameters...",
                        "config['instance-type'] = globalconfig.aws['vm-props']['app-vm'].size;"
                    ]
                },
                "provision-db-vm": {
                    "runner": "js-sandbox-runner",
                    "config": {
                        "hostname": "db-vm",
                        "files": { "ec2-provision.js": "http://ops-artifact-store/aws-management/ec2-provision.js" },
                        "include": [ "ec2-provision.js" ]
                    },
                    "prerun": [
                        "config['instance-type'] = globalconfig.aws['vm-props']['db-vm'].size;"
                    ]
                },
                "deploy-nodejs": {
                    "host": "app-vm",
                    "runner": "chef-solo-runner",
                    "config": {
                        "files": { "nodejs.tar.gz": "http://s3.amazonaws.com/community-files.opscode.com/cookbook_versions/tarballs/4335/original/nodejs.tar.gz?1376517323" },
                        "runlist": [ "recipe[nodejs::default]" ],
                        "nodejs": {
                            "check_sha": false
                        }
                    }
                },
                "deploy-mongodb": {
                    "host": "db-vm",
                    "runner": "chef-solo-runner",
                    "config": {
                        "files": { "mongodb.tar.gz": "http://s3.amazonaws.com/community-files.opscode.com/cookbook_versions/tarballs/6346/original/mongodb.tar.gz?1396423886" },
                        "runlist": [ "recipe[mongodb::default]" ]
                    },
                    "mergeconfig": false
                },
                "run-app": {
                    "host": "app-vm",
                    "runner": "operation-runner",
                    "config": {
                        "Devopsfile": "./core/Devopsfile",
                        "operation": "run"
                    }
                }
            },
            "dependencies": [
                [ "deploy-nodejs", "provision-app-vm" ],
                [ "deploy-mongodb", "provision-db-vm" ],
                [ "run-app", "deploy-nodejs" ],
                [ "run-app", "deploy-mongodb" ]
            ],
            "postoptest": {
                "runner": "js-sandbox-runner",
                "config": {
                    "files": { "postdeploytest.js": "./test/post-deployment.js" },
                    "include": [ "postdeploytest.js" ]
                }
            }
        },
        "expose": {
            "artifacts": {
                "update-sec-group": {
                    "runner": "js-sandbox-runner",
                    "config": {
                        "aws": {
                            "sec-groups": {
                                "chat": {
                                    "inbound": [
                                        { "protocol": "TCP", "port": 80 }
                                    ]
                                }
                            }
                        },
                        "files": { "ec2-update-secgroup.js": "http://ops-artifact-store/aws-management/ec2-update-secgroup.js" },
                        "include": [ "ec2-update-secgroup.js" ]
                    }
                }
            }
        }
    }
}